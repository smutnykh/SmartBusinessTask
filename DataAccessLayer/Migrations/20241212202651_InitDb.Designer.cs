// <auto-generated />
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ProductionDbContext))]
    [Migration("20241212202651_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccessLayer.Contract", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.HasIndex("EquipmentTypeCode");

                    b.HasIndex("FacilityCode");

                    b.ToTable("Contract");

                    b.HasData(
                        new
                        {
                            Code = "123456z",
                            Amount = 2,
                            EquipmentTypeCode = "123456d",
                            FacilityCode = "123456a"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.EquipmentType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("EquipmentType");

                    b.HasData(
                        new
                        {
                            Code = "123456c",
                            Area = 1,
                            Name = "ToolBox"
                        },
                        new
                        {
                            Code = "123456d",
                            Area = 50,
                            Name = "Vehicle"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Facility", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandartArea")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("Facility");

                    b.HasData(
                        new
                        {
                            Code = "123456a",
                            Name = "Facility1",
                            StandartArea = 100
                        },
                        new
                        {
                            Code = "123456b",
                            Name = "Facility2",
                            StandartArea = 200
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Contract", b =>
                {
                    b.HasOne("DataAccessLayer.EquipmentType", "EquipmentType")
                        .WithMany("Contracts")
                        .HasForeignKey("EquipmentTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Facility", "Facility")
                        .WithMany("Contracts")
                        .HasForeignKey("FacilityCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("DataAccessLayer.EquipmentType", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("DataAccessLayer.Facility", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
